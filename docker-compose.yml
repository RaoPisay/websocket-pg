version: '3.8'

services:
  websocket-server:
    build: .
    container_name: websocket-server
    ports:
      - "8080:8080"   # WebSocket server
      - "8081:8081"   # Health check
      - "9090:9090"   # Metrics
    environment:
      - PROFILE=prod
      - MODE=server
      - JAVA_OPTS=-Xmx1g -Xms512m
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - websocket-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: websocket-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - websocket-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: websocket-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - websocket-network

  # Load balancer (nginx)
  nginx:
    image: nginx:alpine
    container_name: websocket-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - websocket-server
    restart: unless-stopped
    networks:
      - websocket-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  websocket-network:
    driver: bridge